name: Publish Avro
on:
  push:
    branches:
      - main
    paths:
      - 'idl/**'
env:
  AVRO_VERSION: 1.11.0
  AVRO_MIRROR: https://apache.zero.com.ar/avro
  GITHUB_REPOSITORY_OWNER: architecture-it
  BUILD_CONFIGURATION: 'Release'
  DIRECORY_SRC: 'lang/csharp/Andreani/wilgab/Events' # working directory remplace {appname}
  IDL_FOLDER: 'idl/' # archivo avdl remplace {Example}
  EVENT: 'Pedido'
  OUTPUT_DIRECTORY: 'bin/Release/'
jobs:
  gen-nuget:
    name: "Generate Libs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jre # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: actions/setup-go@v2
        with:
          version: 1.17.7
      - name: Get Avro Tools
        run: wget --quiet ${{env.AVRO_MIRROR}}/avro-${{env.AVRO_VERSION}}/java/avro-tools-${{env.AVRO_VERSION}}.jar
      - name: Get gogen-avro Tools
        run: go get github.com/actgardner/gogen-avro/v10/cmd/...
      - name: Generate Protocol
        run: java -jar avro-tools-${{env.AVRO_VERSION}}.jar idl2schemata ${{env.FILE_IDL+env.EVENT}}.avdl avro/
      - name: Generate folder output
        run: mkdir avro/struct
      - name: Generate go struct
        run: /home/runner/go/bin/gogen-avro avro/struct avro/${{env.EVENT}}.avsc
      - name: ls avro
        run: ls avro/
      - name: ls avro/struct
        run: ls avro/struct/
      # - name: Generate go struct3
      #   run: ls /avro
      # - name: Restore dependencies
      #   run: dotnet restore
      #   working-directory: ${{env.DIRECORY_SRC}}
      # - name: Build
      #   run: dotnet build --configuration Release --no-restore
      #   working-directory: ${{env.DIRECORY_SRC}}
      # - name: Pack
      #   run: dotnet pack -p:PackageVersion=1.0.$GITHUB_RUN_NUMBER --no-build -c Release -o ${{ env.OUTPUT_DIRECTORY }}
      #   working-directory: ${{env.DIRECORY_SRC}}
      # - name: Add NuGet sources
      #   run: |
      #     dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/index.json --name github
      # - name: Nuget Push on Github
      #   run: dotnet nuget push --source github --api-key ${{ secrets.ARQUITECTURA_DEPLOY }} --skip-duplicate ${{ env.DIRECORY_SRC }}/${{ env.OUTPUT_DIRECTORY }}*.nupkg
      #   working-directory: ${{ env.DIRECTORY_SRC }}