name: Publish Avro
on:
  push:
    branches:
      - main
    paths:
      - 'idl/**'
env:
  AVRO_VERSION: 1.11.0
  AVRO_MIRROR: https://apache.zero.com.ar/avro
  GITHUB_PROJECT_OWNER: covaw
  PROJECT: 'Ordenes'
  SOURCE_EVENTS_FILE_IDL: 'idl/Pedido.avdl' # archivo avdl remplace {Example}
  REPOSITORY_NUGET: 'covaw/template-nuget-go'
jobs:
  gen-nuget:
    name: "Generate Libs"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v2
        with: 
          path: ./origin
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jre # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: actions/setup-go@v2
        with:
          version: 1.17.7
      - name: Get Avro Tools
        run: wget --quiet ${{env.AVRO_MIRROR}}/avro-${{env.AVRO_VERSION}}/java/avro-tools-${{env.AVRO_VERSION}}.jar
      - name: Get gogen-avro Tools
 Event
      - name: Generate Protocol
        run: java -jar avro-tools-${{env.AVRO_VERSION}}.jar idl2schemata origin/${{env.SOURCE_EVENTS_FILE_IDL}} avro/
      - name: Generate folder output
        run: mkdir avro/struct
      - name: Generate go struct
        run: /home/runner/go/bin/gogen-avro --package=Events avro/struct avro/*.avsc
      - name: Show folder AVRO
        run: ls avro/
      - name: Show folder Schemas
        run: ls avro/struct/
      - name: Checkout Nuget go
        uses: actions/checkout@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          repository: ${{ env.REPOSITORY_NUGET }}
          token: ${{ env.GITHUB_TOKEN }}
          path: ./nuget
      - name: Create folder
        run: |
          cd ./nuget

          if [ -d "${{ env.GITHUB_PROJECT_OWNER }}" ]; then
            echo "folder owner exists"
          else
            echo "Creating folder owner"
            mkdir ${{ env.GITHUB_PROJECT_OWNER }}
          fi
          
          ls

          cd ${{ env.GITHUB_PROJECT_OWNER }}/

          if [ -d "${{ env.PROJECT }}" ]; then
            echo "folder ${{ env.PROJECT }} exists"
            rm -r ${{ env.PROJECT }}
            mkdir ${{ env.PROJECT }}
          else
            echo "Creating folder project"
            mkdir ${{ env.PROJECT }}
          fi
          
          cd ${{ env.PROJECT }}/

          mkdir Events
          ls
      - name: Copy/Create file
        run: |
          SOURCE=avro/struct/*.go
          if [ -f $SOURCE ]; then
            echo "Copying $FILE"
            cp -R avro/struct/*.go ./nuget/${{ env.GITHUB_PROJECT_OWNER }}/${{ env.PROJECT }}/Events
          else 
            echo "Creating $FILE"
            touch ./nuget/${{ env.GITHUB_PROJECT_OWNER }}/${{ env.PROJECT }}/Events/*.go
          fi
      - name: Show folder Nuget
        run:  ls ./nuget/
      - name: build go 
        run:  |
          cd ./nuget/
          if [ -f "go.mod" ]; then
            rm go.sum
            rm go.mod
            go mod init github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/${{ env.REPOSITORY_NUGET }}
            go mod tidy
          else 
            go mod init github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/${{ env.REPOSITORY_NUGET }}
            go mod tidy
          fi
          ls
      - name: Push to Go Nuget
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.ARQUITECTURA_DEPLOY }}
        with:
          source-directory: ./nuget/
          destination-github-username: ${{ env.GITHUB_PROJECT_OWNER }}
          destination-repository-name: ${{ env.REPOSITORY_NUGET }}
          user-email: git-actions@github.com
          commit-message: add ${{ env.PROJECT }} schemas for ${{ env.GITHUB_PROJECT_OWNER }}
          target-branch: main