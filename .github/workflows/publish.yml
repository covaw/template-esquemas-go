name: Publish Avro
on:
  push:
    branches:
      - main
    paths:
      - 'idl/**'
env:
  AVRO_VERSION: 1.11.0
  AVRO_MIRROR: https://apache.zero.com.ar/avro
  GITHUB_REPOSITORY_OWNER: covaw
  IDL_FOLDER: 'idl/' # archivo avdl remplace {Example}
  EVENT: 'Pedido'
  REPOSITORY_NUGET: 'template-nuget-go'
jobs:
  gen-nuget:
    name: "Generate Libs"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v2
        with: 
          path: ./origin
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jre # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: actions/setup-go@v2
        with:
          version: 1.17.7
      - name: Get Avro Tools
        run: wget --quiet ${{env.AVRO_MIRROR}}/avro-${{env.AVRO_VERSION}}/java/avro-tools-${{env.AVRO_VERSION}}.jar
      - name: Get gogen-avro Tools
        run: go get github.com/actgardner/gogen-avro/v10/cmd/...
      - name: Generate Protocol
        run: java -jar avro-tools-${{env.AVRO_VERSION}}.jar idl2schemata origin/${{env.IDL_FOLDER}}${{env.EVENT}}.avdl avro/
      - name: Generate folder output
        run: mkdir avro/struct
      - name: Generate go struct
        run: /home/runner/go/bin/gogen-avro avro/struct avro/${{env.EVENT}}.avsc
      - name: Show folder AVRO
        run: ls avro/
      - name: Show folder Schemas
        run: ls avro/struct/
      - name: Checkout Nuget go
        uses: actions/checkout@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          repository: covaw/template-nuget-go
          token: ${{ env.GITHUB_TOKEN }}
          path: ./nuget
      - id: string
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{env.EVENT}}
      - name: Create folder
        run: |
          cd ./nuget

          if [ -d "${{ env.GITHUB_REPOSITORY_OWNER }}" ]; then
            echo "folder owner exists"
          else
            echo "Creating folder owner"
            mkdir ${{ env.GITHUB_REPOSITORY_OWNER }}
          fi
          
          ls

          cd ${{ env.GITHUB_REPOSITORY_OWNER }}/

          if [ -d "${{steps.string.outputs.lowercase}}" ]; then
            echo "folder ${{steps.string.outputs.lowercase}} exists"
          else
            echo "Creating folder schema"
            mkdir ${{steps.string.outputs.lowercase}}
          fi

          ls
      - name: Copy/Create file
        run: |
          EVENT=${{steps.string.outputs.lowercase}}
          FILE=avro/struct/$EVENT.go
          if [ -f "$FILE" ]; then
            echo "Copying $FILE"
            cp -R avro/struct/*.go ./nuget/${{ env.GITHUB_REPOSITORY_OWNER }}/$EVENT
          else 
            echo "Creating $FILE"
            touch ./nuget/${{ env.GITHUB_REPOSITORY_OWNER }}/$EVENT/*.go
          fi
      - name: Show folder Nuget
        run: ls ./nuget/
      - name: Pushes to Go Nuget
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          source-directory: ./nuget/
          destination-github-username: ${{ env.GITHUB_REPOSITORY_OWNER }}
          destination-repository-name: ${{ env.REPOSITORY_NUGET }}
          user-email: git-actions@github.com
          commit-message: add schema ${{ env.EVENT }}
          target-branch: main